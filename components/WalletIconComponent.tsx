import React from 'react';
import { WalletIcon } from './icons/Icons';

// --- SVG Icon Components defined directly in the file ---

const BRIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (
    <svg viewBox="0 0 192 192" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
        <path d="M138.917 34H52.0884C41.5452 34 33 42.7491 33 53.542V53.7474V139.463C33 150.151 41.3871 158.842 51.7932 159H138.869C149.413 159 157.963 150.256 157.963 139.463L158 53.542C158 42.7491 149.46 34 138.917 34ZM62.4049 148.987L57.6711 149.039C51.9356 149.039 47.286 144.33 47.286 138.52L47.2597 137.693V58.3458L47.2913 54.0687C47.5074 48.4484 51.7827 43.929 57.3758 43.929H67.007C75.7368 43.929 82.8113 51.514 82.8113 60.4527C82.8113 64.8773 81.0769 68.8911 78.2672 71.8092L53.6963 96.7239L76.7279 120.158C79.6958 123.219 81.4881 127.232 81.4881 131.631C81.4881 141.217 72.9481 148.987 62.4049 148.987ZM133.208 148.908L90.2706 148.892C90.2706 148.892 95.2312 138.173 95.2312 131.536C95.2312 123.44 92.5268 116.213 88.2885 111.43L73.6018 96.471L88.5889 80.9955C93.054 76.8079 96.0166 69.3704 96.0166 60.8952C96.0166 54.1846 94.161 48.243 91.172 43.929H101.573C110.303 43.929 117.382 51.514 117.382 60.4527C117.382 64.8773 115.648 68.8911 112.838 71.8092L88.7365 96.4658L138.796 147.47C137.209 148.465 135.211 148.908 133.208 148.908ZM143.693 132.984L107.82 96.45L124.905 79.0992C128.379 74.7537 130.588 68.2116 130.588 60.8952C130.588 54.1424 128.706 48.0481 125.69 43.7341L133.334 43.9659C139.07 43.9659 143.719 48.6749 143.719 54.4848L143.693 132.984Z" fill="#00529C"/>
    </svg>
);

const BrilinkIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (
    <svg viewBox="0 0 192 192" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
        <path d="M16.5996 40H45.3616C50.1524 40 53.8347 41.1989 56.3917 43.5854C58.9598 45.972 60.2467 48.93 60.2467 52.4426C60.2467 55.4006 59.3331 57.9384 57.5058 60.056C56.2803 61.4622 54.4976 62.5826 52.1468 63.395C55.7121 64.2577 58.3359 65.7479 60.0294 67.8431C61.7062 69.9496 62.553 72.5938 62.553 75.7703C62.553 78.3641 61.9513 80.6947 60.7592 82.7675C59.5559 84.8404 57.9237 86.4706 55.8402 87.6807C54.5533 88.4258 52.6091 88.9748 50.0076 89.3109C46.5481 89.7647 44.253 90 43.1221 90H16.6052V40.0112L16.5996 40ZM32.0975 59.6135H38.7769C41.1723 59.6135 42.838 59.1933 43.7906 58.3697C44.7265 57.5294 45.1889 56.3305 45.1889 54.7731C45.1889 53.3165 44.7265 52.1793 43.7906 51.3613C42.8436 50.5378 41.2113 50.1289 38.8827 50.1289H32.1031V59.6135H32.0975ZM32.0975 79.2493H39.93C42.5817 79.2493 44.4424 78.7843 45.5175 77.8431C46.6038 76.902 47.1498 75.6303 47.1498 74.0392C47.1498 72.5602 46.615 71.3726 45.5398 70.4762C44.4646 69.5798 42.5873 69.126 39.891 69.126H32.0919V79.2493H32.0975ZM70.7866 89.9888V40H96.3843C101.131 40 104.763 40.409 107.264 41.2325C109.776 42.0448 111.799 43.563 113.342 45.7815C114.879 47.9944 115.643 50.6947 115.643 53.8712C115.643 56.6555 115.052 59.0364 113.882 61.0532C112.701 63.0644 111.08 64.6947 109.036 65.9552C107.715 66.7451 105.921 67.4118 103.643 67.9216C105.47 68.5378 106.802 69.1541 107.648 69.7703C108.206 70.1793 109.024 71.0532 110.1 72.3866C111.175 73.7367 111.893 74.7619 112.25 75.4958L119.681 89.9888H102.323L94.117 74.7059C93.0753 72.7395 92.1505 71.4454 91.3261 70.8515C90.2286 70.084 88.964 69.6975 87.5658 69.6975H86.2121V89.9832H70.7866V89.9888ZM86.2121 60.2521H92.6909C93.3872 60.2521 94.7409 60.0336 96.752 59.5742C97.7714 59.3669 98.6015 58.8403 99.2533 58.0056C99.8884 57.1653 100.211 56.2017 100.211 55.1092C100.211 53.4902 99.7045 52.2577 98.6851 51.395C97.6656 50.521 95.7548 50.0896 92.9583 50.0896H86.2121V60.2521ZM125.208 40H140.6V89.9888H125.208V40Z" fill="#00529C"/>
        <path d="M16.5996 103H32.0683V140.679H56.1935V152.994H16.6052V103H16.5996ZM62.8037 103H76.6969V112.452H62.8037V103ZM62.8037 116.783H76.6969V152.994H62.8037V116.783ZM85.5666 116.783H98.5067V122.672C100.441 120.262 102.398 118.554 104.377 117.517C106.356 116.48 108.767 115.959 111.609 115.959C115.455 115.959 118.461 117.114 120.636 119.394C122.8 121.674 123.888 125.204 123.888 129.972V152.994H109.933V133.076C109.933 130.807 109.512 129.199 108.677 128.258C107.825 127.305 106.653 126.84 105.122 126.84C103.446 126.84 102.072 127.479 101.035 128.751C99.9868 130.017 99.4654 132.314 99.4654 135.609V153H85.5722V116.789L85.5666 116.783ZM132.18 103H146.376V128.784L156.754 116.783H173.854L160.841 129.468L174.6 152.994H158.935L151.596 138.466L146.376 143.576V152.994H132.18V103Z" fill="#F58220"/>
    </svg>
);

const DanaIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (
    <svg viewBox="0 0 192 192" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
        <path d="M95.6104 33.2197C130.067 33.2199 158 61.1533 158 95.6104C158 130.067 130.067 158 95.6104 158C61.1533 158 33.2199 130.067 33.2197 95.6104C33.2197 61.1531 61.1531 33.2197 95.6104 33.2197ZM120.811 71.3145C117.521 70.707 114.142 70.7871 110.885 71.5498C107.09 72.4342 103.36 73.5787 99.7227 74.9766C95.05 76.6331 90.4577 78.5877 85.7051 80.0615C82.3572 81.1972 78.8634 81.8473 75.3311 81.9922C70.391 82.0833 65.5433 80.6465 61.4502 77.8789C61.0161 77.5933 60.5017 77.1247 59.999 77.4102C59.4963 77.6958 59.4961 78.3591 59.4961 78.9189V113.628C59.5107 114.11 59.6369 114.582 59.8672 115.008C60.1304 115.494 60.5196 115.9 60.9932 116.186C64.7625 118.579 69.0989 119.931 73.5605 120.104C77.5863 120.214 81.6042 119.686 85.4648 118.539C90.126 117.248 94.605 115.58 99.1748 114.038C103.757 112.3 108.527 111.104 113.387 110.474C117.84 109.962 122.35 110.563 126.514 112.222C127.892 112.805 129.229 113.485 130.513 114.255C131.472 114.815 131.963 114.575 131.963 113.433V95.873L131.997 95.9531V78.8154C132.026 78.0715 131.856 77.3332 131.505 76.6768C131.153 76.0202 130.633 75.4691 129.998 75.0801C127.228 73.2042 124.1 71.922 120.811 71.3145Z" fill="#008CEB"/>
    </svg>
);

const SeaBankIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (
    <svg viewBox="0 0 192 192" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
        <path d="M66.3838 139.057C76.0433 138.52 83.8922 141.879 92.2793 145.442C101.672 149.474 111.467 153.572 125.086 153.035C128.306 152.967 131.66 152.295 135.081 151.153C137.363 150.346 139.912 151.557 140.785 153.975C141.141 155.081 141.053 156.282 140.539 157.324C140.025 158.365 139.126 159.165 138.033 159.553C133.807 160.963 129.582 161.772 125.489 161.906C123.811 161.972 122.202 162.04 120.591 161.972C107.508 161.571 97.713 157.403 88.9248 153.64C81.2109 150.279 74.4342 147.524 67.0537 147.86C60.7574 148.33 56.2001 151.949 56.1201 151.961C54.2404 153.438 51.4227 153.103 49.9473 151.221C48.4718 149.338 48.739 146.584 50.6172 145.104C50.8864 144.904 57.2589 139.796 66.3838 139.057ZM65.9004 125.063C79.7983 124.435 89.0622 128.622 97.9922 132.669C106.518 136.437 114.508 140.138 126.727 139.58C136.327 139.229 144.72 134.135 148.882 131.134L148.883 131.135C150.896 129.599 153.784 130.157 155.192 132.252C156.603 134.415 156.132 137.346 154.051 138.81C149.017 142.371 138.945 148.442 127.063 148.931C125.653 149 124.31 149 122.968 149C110.882 148.79 102.492 144.953 94.2998 141.253C85.9743 137.485 78.1192 133.925 66.2363 134.415C55.9634 134.834 46.9006 141.253 42.4033 145.022C41.9424 145.416 41.4105 145.711 40.8389 145.889C40.2674 146.068 39.6676 146.127 39.0742 146.062C38.4807 145.997 37.9052 145.809 37.3818 145.511C36.8585 145.213 36.3974 144.81 36.0254 144.325C35.6462 143.846 35.3621 143.293 35.1904 142.699C35.0188 142.105 34.9621 141.481 35.0244 140.864C35.0868 140.247 35.2669 139.648 35.5537 139.104C35.8405 138.56 36.2286 138.081 36.6953 137.694C42.0679 133.228 53.0098 125.551 65.9004 125.063Z" fill="#2673DD"/>
        <path d="M96.0011 29C129.688 29 157 56.5153 157 90.3818C157 106.201 151.095 119.856 141.433 130.742C137.608 132.498 133.11 134.663 128.346 134.934C126.87 135 125.46 135 124.051 135C138.681 125.604 148.343 109.11 148.343 90.4502C148.343 61.3134 124.788 37.5859 95.8653 37.5859C66.9425 37.5861 43.3878 61.3155 43.3878 90.4521C43.3879 102.823 47.6161 114.249 54.7296 123.239C51.948 124.093 49.2337 125.155 46.6095 126.417C39.0449 115.95 34.979 103.331 35.0001 90.3838C35.0001 56.5139 62.312 29 96.0011 29ZM96.0684 42C122.481 42 144.066 63.6184 144 90.1543C144 109.619 132.469 126.39 115.911 134C109.945 132.855 104.85 130.768 99.5528 128.612L99.42 128.546C90.1682 124.707 79.6429 120.396 64.3585 121.272C62.8165 121.407 61.3416 121.54 59.8673 121.811C52.2048 113.064 47.9849 101.806 48.0001 90.1543C48.0003 63.6184 69.6539 42.0001 96.0684 42ZM97.4073 64.0908C95.4575 64.081 93.5162 64.3533 91.6436 64.8994C89.8329 65.4362 88.2251 66.3147 86.7491 67.3916C85.2749 68.4685 84.1352 69.8831 83.2628 71.5664C82.4596 73.2514 81.9896 75.2033 81.922 77.4268C81.922 80.8612 82.7926 83.6894 84.7384 85.9111C86.6811 88.2009 89.0287 89.8186 91.8438 90.8955C93.1555 91.4859 94.4987 92.0029 95.8673 92.4443C97.274 92.9165 98.6165 93.3871 99.8204 93.9951C100.945 94.499 101.968 95.207 102.838 96.083C103.71 96.8916 104.113 97.9006 104.113 99.1797C104.044 100.865 103.375 102.212 101.9 103.087C100.426 103.962 98.7502 104.433 96.7384 104.365C94.3916 104.365 92.112 103.827 89.9005 102.75C87.7975 101.806 85.8708 100.507 84.2032 98.9111L79.3077 105.847C79.7777 106.387 80.5151 107.06 81.587 107.802C82.7589 108.747 84.0158 109.58 85.3409 110.292C86.8168 111.1 88.4921 111.775 90.3028 112.38C92.1136 112.988 94.1245 113.258 96.336 113.324C98.6827 113.392 100.894 113.122 102.906 112.516C104.917 111.909 106.659 111.034 108.201 109.821C109.677 108.609 110.883 107.195 111.755 105.444C112.558 103.759 113.028 101.739 113.096 99.5176C113.162 97.228 112.76 95.2748 111.955 93.5898C111.084 91.9065 110.012 90.4247 108.604 89.2119C107.175 87.9665 105.598 86.9031 103.91 86.0459C102.169 85.1711 100.426 84.4299 98.6827 83.8252C97.8779 83.4872 96.9389 83.1508 96.0665 82.8145C95.1959 82.4103 94.3252 82.0725 93.5206 81.5342C92.7159 81.0637 92.0463 80.4574 91.5763 79.7832C91.1062 79.1105 90.9054 78.3013 90.9054 77.4248C90.9055 75.9437 91.5764 74.7991 92.9171 74.0586C94.1902 73.2501 95.7321 72.9137 97.4093 73.0479C99.6207 73.1837 101.497 73.5865 103.039 74.2607C104.514 74.9334 105.99 75.7423 107.331 76.7529L112.09 69.8828C110.077 68.333 107.922 66.9797 105.653 65.8418C103.374 64.7633 100.627 64.1571 97.5431 64.0908H97.4073Z" fill="#EA5F00"/>
    </svg>
);

const ShopeePayIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (
    <svg viewBox="0 0 192 192" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
        <path d="M129.575 40.9318C130.278 40.8701 130.987 40.9559 131.655 41.1827C132.323 41.4096 132.937 41.7732 133.457 42.2501C133.977 42.7271 134.393 43.307 134.677 43.9532C134.961 44.5993 135.107 45.2974 135.106 46.0031V54.337C135.106 54.9505 134.862 55.539 134.429 55.9728C133.995 56.4066 133.406 56.6505 132.793 56.6505H50.0469C49.4439 56.67 48.8723 56.9247 48.4541 57.3595C48.0359 57.7944 47.8044 58.3753 47.8086 58.9786C47.8086 60.3276 48.344 61.6214 49.2979 62.5753C50.2517 63.5292 51.5456 64.0646 52.8945 64.0646L145.146 64.1095C148.213 64.1095 151.155 65.3281 153.324 67.4972C155.493 69.6663 156.712 72.6083 156.712 75.6759V140.434C156.712 143.501 155.493 146.444 153.324 148.613C151.155 150.782 148.213 152.001 145.146 152.001H46.7852C43.7177 152.001 40.7756 150.782 38.6064 148.613C36.4373 146.444 35.2188 143.501 35.2188 140.434V59.9132C35.208 57.0102 36.2894 54.2093 38.248 52.0665C40.2066 49.9239 42.8989 48.5963 45.791 48.3468L129.575 40.9318ZM95.5273 77.337C85.7106 77.3667 77.9697 83.5799 77.332 91.8693C76.9069 97.8601 79.873 102.709 86.2295 106.416C89.9866 108.158 93.8384 109.688 97.7666 110.999C106.886 113.831 111.617 118.932 110.505 124.863C109.497 130.172 103.831 133.657 96.0166 133.761C90.1428 133.44 84.5168 131.288 79.9277 127.608L79.2012 127.044C79.1031 126.938 78.9816 126.856 78.8467 126.805C78.7118 126.754 78.5664 126.735 78.4229 126.749C78.2793 126.764 78.1407 126.811 78.0186 126.888C77.8964 126.965 77.793 127.068 77.7178 127.192L75.3604 130.632C74.9601 131.18 75.1671 131.492 75.582 131.833C77.3898 133.35 79.3421 134.686 81.4102 135.822C85.9266 138.119 90.8928 139.395 95.957 139.56C99.6061 139.732 103.25 139.11 106.635 137.735C109.332 136.654 111.686 134.863 113.448 132.553C115.1 130.387 116.174 127.84 116.573 125.151L116.674 124.76C117.86 115.091 111.632 108.937 95.2012 103.688C87.2381 100.959 83.4862 97.4005 83.5752 92.507C83.9014 87.0796 88.9584 83.1199 95.6611 82.9865C100.944 83.041 106.097 84.6332 110.49 87.5685C111.098 87.954 111.513 87.8803 111.854 87.3761C112.374 86.6345 113.471 84.8252 113.856 84.1876C113.943 84.071 114.003 83.9364 114.032 83.7941C114.061 83.6517 114.058 83.5047 114.024 83.3634C113.99 83.222 113.927 83.0894 113.836 82.9757C113.745 82.862 113.63 82.7698 113.5 82.7052C111.894 81.6551 110.203 80.7423 108.443 79.9767C104.357 78.2443 99.9656 77.3467 95.5273 77.337Z" fill="#EE4D2D"/>
    </svg>
);

const CashIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" {...props}>
        <path d="M15 8H9V11H15V8Z" />
        <path fillRule="evenodd" clipRule="evenodd" d="M2.25 6C2.25 4.49239 3.49239 3.25 5 3.25H19C20.5076 3.25 21.75 4.49239 21.75 6V18C21.75 19.5076 20.5076 20.75 19 20.75H5C3.49239 20.75 2.25 19.5076 2.25 18V6ZM5 4.75C4.30964 4.75 3.75 5.30964 3.75 6V18C3.75 18.6904 4.30964 19.25 5 19.25H19C19.6904 19.25 20.25 18.6904 20.25 18V6C20.25 5.30964 19.6904 4.75 19 4.75H5Z" />
        <path d="M12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15ZM12 13.5C12.8284 13.5 13.5 12.8284 13.5 12C13.5 11.1716 12.8284 10.5 12 10.5C11.1716 10.5 10.5 11.1716 10.5 12C10.5 12.8284 11.1716 13.5 12 13.5Z" />
    </svg>
);

interface WalletIconComponentProps {
    walletId: string;
    iconUrl: string;
    className?: string;
    altText?: string;
}

const iconMap: { [key: string]: React.FC<any> } = {
    'BRI': BRIcon,
    'BRILINK': BrilinkIcon,
    'SEABANK': SeaBankIcon,
    'DANA': DanaIcon,
    'SHOPEEPAY': ShopeePayIcon,
    'CASH': CashIcon,
};

const WalletIconComponent: React.FC<WalletIconComponentProps> = ({ walletId, iconUrl, className, altText = '' }) => {
    const IconComponent = iconMap[walletId];

    if (IconComponent) {
        return <IconComponent className={className} />;
    }

    // Fallback for custom wallets with image URLs
    if(iconUrl) {
        return <img src={iconUrl} alt={altText} className={className} />;
    }
    
    // Fallback for custom wallets without image URLs
    return <WalletIcon className={className} />;
};

export default WalletIconComponent;
